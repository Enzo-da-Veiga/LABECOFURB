---
title: "Enzo Euzébio Martins da Veiga"
format: html
editor: visual
---

```{r}
#| label: load-packages
#| include: false

#install.packages("palmerpenguins")
#install.packages("scales")
#install.packages("tidyverse")
#install.packages("WDI")
library("palmerpenguins")
library("scales")
library("tidyverse")
library("WDI")

options(scipen = 999) # REMOVER A NOT. CIENT.
# DADOS EM PAINEL
dadosChangesinventories <- WDI(country = 'all',
                indicator = 'NE.GDI.STKB.CD')

paises <- c('BR', 'US')

dadosChangesinventoriesbrus <- WDI(country = paises,
                    indicator = 'NE.GDI.STKB.CD')

# CORTE TRANSVERSAL
dadosChangesinventories2023 <- WDI(country = 'all',
                    indicator = 'NE.GDI.STKB.CD',
                    start = 2023, end = 2023)

# SÉRIE TEMPORAL
dadosChangesinventoriesbr <- WDI(country = 'BR',
                  indicator = 'NE.GDI.STKB.CD')
```

## **Mudanças nos Inventários**

Que mede a diferença entre os estoques de mercadorias e materiais dentro de uma economia ao longo de um período. Ele é utilizado para entender a produção, o consumo e as flutuações econômicas, sendo importante tanto para o cálculo do PIB quanto para análise de ciclos econômicos.

### **Utilização do Indicador:**

**Cálculo do PIB:** Mudanças nos inventários podem impactar diretamente o cálculo do Produto Interno Bruto (PIB), pois afetam a medição do consumo e do investimento.

**Análise de ciclo econômico:** As flutuações nos inventários muitas vezes indicam mudanças nos ciclos econômicos, como recessões ou períodos de expansão.

**Expectativa de crescimento:** A análise das variações nos inventários pode ajudar a prever tendências de produção e consumo em uma economia.

## GRÁFICO DE DADOS EM PAINEL

O primeiro gráfico (`grafpainel`) busca mostrar como as mudanças nos inventários variam ao longo dos anos para todos os países disponíveis no banco de dados (usando todos os países como amostra).

```{r}
#| label: graficodadosChangesinventories
#| warning: false
#| echo: false
 
library(ggplot2)
library(dplyr)
library(scales)

# 1. Calcular médias por país (indicador NE.GDI.STKB.CD)
medias <- dadosChangesinventories %>%
  group_by(iso2c, country) %>%
  summarise(media_valor = mean(NE.GDI.STKB.CD, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(media_valor))

# 2. Selecionar os 10 maiores países + Brasil
top10 <- medias %>% slice_head(n = 10)
brasil_info <- medias %>% filter(iso2c == "BR")
top_paises <- bind_rows(top10, brasil_info) %>% distinct(iso2c, .keep_all = TRUE)

# 3. Filtrar dados somente desses países e remover valores NA
dados_filtrados <- dadosChangesinventories %>%
  filter(iso2c %in% top_paises$iso2c) %>%
  filter(!is.na(NE.GDI.STKB.CD), !is.na(year))  # Remover NAs explicitamente

# 4. Marcar Brasil com cor vermelha
dados_filtrados <- dados_filtrados %>%
  mutate(cor = ifelse(iso2c == "BR", "Brasil", "Outros"))

# 5. Criar legenda personalizada com nomes + valores médios formatados
legenda <- top_paises %>%
  mutate(media_formatada = label_number(scale_cut = cut_short_scale())(media_valor),
         nome_legenda = ifelse(iso2c == "BR",
                               paste0(country, " (", media_formatada, ") [Brasil]"),
                               paste0(country, " (", media_formatada, ")"))) %>%
  arrange(desc(media_valor))

# 6. Gerar gráfico com Brasil em vermelho e outros em azul
grafico <- ggplot(dados_filtrados, aes(x = year, y = NE.GDI.STKB.CD, group = country)) +
  geom_line(aes(color = cor), linewidth = 1.2, alpha = 0.9) +
  scale_color_manual(values = c("Brasil" = "red", "Outros" = "steelblue")) +
  facet_wrap(~ country, scales = "free_y") +
  scale_y_continuous(
    labels = label_number(scale_cut = cut_short_scale()), 
    breaks = seq(-100e9, 100e9, by = 50e9),  # Eixo Y fixo de -100 a 100 bilhões
    limits = c(-100e9, 100e9)  # Limites fixos para o eixo Y
  ) +
  scale_x_continuous(
    breaks = seq(1980, 2020, by = 10),  # Eixo X com anos de 1980 a 2020 de 10 em 10 anos
    labels = seq(1980, 2020, by = 10),  # Rótulos do eixo X (anos)
    limits = c(1980, 2020)  # Limites fixos para o eixo X
  ) +
  labs(
    title = "Evolução das Mudanças nos Inventários (Changes in Inventories)",
    subtitle = "Top 10 países com maiores médias + Brasil destacado em vermelho",
    x = "Ano",
    y = "Changes in Inventories",
    caption = paste("Top países por valor médio:\n",
                    paste0(seq_along(legenda$nome_legenda), ". ", legenda$nome_legenda, collapse = "\n"))
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
    plot.subtitle = element_text(size = 13, hjust = 0.5),
    plot.caption = element_text(size = 9, hjust = 0),
    strip.text = element_text(face = "bold", size = 12),
    axis.title.x = element_text(size = 12, margin = margin(t = 10)),
    axis.title.y = element_text(size = 12, margin = margin(r = 10)),
    axis.text.y = element_text(size = 10),  # Diminuir o tamanho da fonte dos números no eixo Y
    legend.position = "none",
    plot.margin = margin(t = 10, r = 10, b = 20, l = 20)
  )

# 7. Exibir o gráfico
print(grafico)

library(ggplot2)
library(dplyr)
library(scales)

# 1. Calcular médias por país (indicador NE.GDI.STKB.CD)
medias <- dadosChangesinventories %>%
  group_by(iso2c, country) %>%
  summarise(media_valor = mean(NE.GDI.STKB.CD, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(media_valor))

# 2. Selecionar os 10 maiores países + Brasil
top10 <- medias %>% slice_head(n = 10)
brasil_info <- medias %>% filter(iso2c == "BR")
top_paises <- bind_rows(top10, brasil_info) %>% distinct(iso2c, .keep_all = TRUE)

# 3. Filtrar dados somente desses países e remover valores NA
dados_filtrados <- dadosChangesinventories %>%
  filter(iso2c %in% top_paises$iso2c) %>%
  filter(!is.na(NE.GDI.STKB.CD), !is.na(year))  # Remover NAs explicitamente

# 4. Gerar um vetor de cores únicas para cada país
# Usaremos uma paleta de cores "Set3" que tem cores distintas, mas o Brasil será vermelho
cores_unicas <- RColorBrewer::brewer.pal(n = length(unique(dados_filtrados$country)) - 1, name = "Set3")

# 5. Criar um mapeamento de país -> cor, com Brasil sendo sempre vermelho
country_colors <- setNames(cores_unicas, unique(dados_filtrados$country)[unique(dados_filtrados$country) != "Brazil"])
country_colors <- c("Brasil" = "red", country_colors)  # Garantir que o Brasil seja vermelho

# 6. Gerar gráfico com cores distintas para cada país, mas Brasil sempre em vermelho
grafico <- ggplot(dados_filtrados, aes(x = year, y = NE.GDI.STKB.CD, color = country, group = country)) +
  geom_line(linewidth = 1.2, alpha = 0.9) +
  scale_color_manual(values = country_colors) +  # Aplicando as cores distintas, Brasil em vermelho
  scale_y_continuous(
    labels = label_number(scale_cut = cut_short_scale()), 
    breaks = seq(-100e9, 100e9, by = 25e9),  # Eixo Y com intervalos de 25 bilhões
    limits = c(-100e9, 100e9)  # Limites fixos para o eixo Y
  ) +
  scale_x_continuous(
    breaks = seq(1980, 2020, by = 10),  # Eixo X com anos de 1980 a 2020 de 10 em 10 anos
    labels = seq(1980, 2020, by = 10),  # Rótulos do eixo X (anos)
    limits = c(1980, 2020)  # Limites fixos para o eixo X
  ) +
  labs(
    subtitle = "Top 10 países com maiores médias + Brasil destacado em vermelho", 
    x = "Ano", 
    y = "Changes in Inventories"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_blank(),  # Remover título
    plot.subtitle = element_text(size = 13, hjust = 0.5),
    plot.caption = element_text(size = 9, hjust = 0),
    strip.text = element_text(face = "bold", size = 12),
    axis.title.x = element_text(size = 12, margin = margin(t = 10)),
    axis.title.y = element_text(size = 12, margin = margin(r = 10)),
    axis.text.y = element_text(size = 10),  # Diminuir o tamanho da fonte dos números no eixo Y
    legend.position = "right",  # Manter a legenda à direita
    plot.margin = margin(t = 10, r = 10, b = 20, l = 20)
  )

# 7. Exibir o gráfico
print(grafico)

```

## GRÁFICO DE DADOS DE CORTE TRANSVERSAL

O segundo gráfico (`grafcorte`) foca nas mudanças nos inventários de 2023, permitindo comparar esses dados entre os países para um único ano.

```{r}
#| label: grafico_colunas_2023
#| warning: false
#| echo: false

library(ggplot2)
library(dplyr)
library(scales)
library(RColorBrewer)

# 1. Calcular médias por país para NE.GDI.STKB.CD
medias <- dadosChangesinventories %>%
  group_by(iso2c, country) %>%
  summarise(media_valor = mean(NE.GDI.STKB.CD, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(media_valor))

# 2. Selecionar os 10 países com maiores médias + Brasil
top10 <- medias %>% slice_head(n = 10)
brasil_info <- medias %>% filter(iso2c == "BR")
top_paises <- bind_rows(top10, brasil_info) %>% distinct(iso2c, .keep_all = TRUE)

# 3. Filtrar os dados de 2023 apenas desses países
dados_barras <- dadosChangesinventories2023 %>%
  filter(iso2c %in% top_paises$iso2c) %>%
  filter(!is.na(NE.GDI.STKB.CD)) %>%
  select(iso2c, country, NE.GDI.STKB.CD) %>%
  distinct() %>%
  arrange(NE.GDI.STKB.CD) %>%
  mutate(country = factor(country, levels = country))

# 4. Definir cores: Brasil em vermelho, os demais com cores distintas
n_outros <- nrow(dados_barras) - 1
cores_outros <- brewer.pal(max(3, min(11, n_outros)), "Set3")  # garantir que n esteja no intervalo 3-11
cores_final <- ifelse(dados_barras$iso2c == "BR", "red", cores_outros[1:n_outros])
names(cores_final) <- levels(dados_barras$country)

# 5. Legenda personalizada com valores formatados
legenda <- dados_barras %>%
  mutate(valor_formatado = label_number(scale_cut = cut_short_scale())(NE.GDI.STKB.CD),
         nome_legenda = ifelse(iso2c == "BR",
                               paste0(country, " (", valor_formatado, ") [Brasil]"),
                               paste0(country, " (", valor_formatado, ")"))) %>%
  arrange(desc(NE.GDI.STKB.CD))

# 6. Gráfico de colunas horizontais
grafico_colunas <- ggplot(dados_barras, aes(x = country, y = NE.GDI.STKB.CD, fill = country)) +
  geom_col(width = 0.7) +
  coord_flip() +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_fill_manual(values = cores_final) +
  labs(
    x = "País",
    y = "Changes in Inventories (2023)",
    subtitle = "Top 10 países com maiores valores em 2023 + Brasil destacado em vermelho",
    caption = paste("Valores por país:\n",
                    paste0(seq_along(legenda$nome_legenda), ". ", legenda$nome_legenda, collapse = "\n"))
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_blank(),
    plot.subtitle = element_text(size = 13, hjust = 0.5),
    axis.title.x = element_text(size = 12, margin = margin(t = 10)),
    axis.title.y = element_text(size = 12, margin = margin(r = 10)),
    axis.text.x = element_text(size = 10),
    axis.text.y = element_text(size = 11),
    legend.position = "none",
    plot.margin = margin(t = 10, r = 10, b = 20, l = 20)
  )

# 7. Exibir o gráfico
print(grafico_colunas)

library(ggplot2)
library(dplyr)
library(scales)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)

# 1. Obter o mapa-múndi utilizando o pacote rnaturalearth
world <- ne_countries(scale = "medium", returnclass = "sf")

# 2. Calcular a média de NE.GDI.STKB.CD por país para 2023 (considerando que dadosChangesinventories2023 já esteja disponível)
medias <- dadosChangesinventories2023 %>%
  group_by(iso2c, country) %>%
  summarise(media_valor = mean(NE.GDI.STKB.CD, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(media_valor))

# 3. Mesclar os dados de médias com o mapa do mundo
world_data <- world %>%
  left_join(medias, by = c("iso_a2" = "iso2c"))

# 4. Ajustar os valores para o degradê de cores de roxo a vermelho
# Definir o intervalo para as cores (de 1 bilhão até 100 bilhões)
intervalos <- c(1, 25, 50, 75, 100)  # Valores em bilhões
cores <- c("purple", "blue", "green", "yellow", "red")

# 5. Criar o gráfico de mapa com a legenda de degradê explicativa
grafico <- ggplot(data = world_data) +
  geom_sf(aes(fill = media_valor), color = "white", size = 0.1) +  # Preencher os países com a variável `media_valor`
  
  # Ajuste para o degradê de cores com os intervalos corretos
  scale_fill_gradientn(
    colors = rev(cores),  # Degradê de roxo (baixo) a vermelho (alto)
    values = scales::rescale(c(0, 1, 25, 50, 75, 100)),  # Escala do degradê de 0 a 100 bilhões
    breaks = c(1, 25, 50, 75, 100),  # Intervalos de 25 bilhões
    labels = c("1 Bilhão", "25 Bilhões", "50 Bilhões", "75 Bilhões", "100 Bilhões+"),  # Rótulos para a legenda
    name = "Valor (em Bilhões)",  # Nome da legenda
    na.value = "lightgray"  # Cor para países sem dados
  ) +
  labs(
    title = "Mapa de Mudanças nos Inventários - 2023",
    subtitle = "Degradê de cores representando valores de NE.GDI.STKB.CD"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16),
    plot.subtitle = element_text(hjust = 0.5, size = 12),
    legend.position = "bottom",  # Colocar a legenda na parte inferior
    plot.margin = margin(10, 10, 30, 10),  # Ajuste na margem para a legenda
    legend.title = element_text(size = 12),  # Tamanho do título da legenda
    legend.text = element_text(size = 10),  # Tamanho do texto na legenda
    legend.key.width = unit(2, "cm")  # Ajuste na largura das chaves da legenda
  )

# Exibir o gráfico
print(grafico)
```

## GRÁFICO DE DADOS DE SÉRIE TEMPORAL

O terceiro gráfico (`grafserie`) mostra como as mudanças nos inventários ocorreram especificamente no Brasil ao longo do tempo.

```{r}
#| label: grafserie
#| warning: false
#| echo: false
 
library(ggplot2)
library(scales)

# Gráfico de Dados de Série Temporal (Mudanças nos Inventários)
  grafserie <- ggplot(dadosChangesinventoriesbr, 
                    mapping = aes(x = year, y = NE.GDI.STKB.CD)) +
  geom_line(color = 'red', size = 1.5) +  # Linha vermelha para o Brasil
  labs(title = "Mudanças nos Inventários - Brasil", 
       x = "Ano", 
       y = "Mudanças nos Inventários (USD)") +  # Eixo Y com título mais claro
  scale_y_continuous(labels = label_number(scale = 1e-9, suffix = " Bilhões")) +  # Eixo Y com valores em bilhões
  scale_x_continuous(breaks = seq(1960, max(dadosChangesinventoriesbr$year), by = 20)) +  # Anos de 20 em 20 começando de 1960
  theme_minimal(base_size = 14) + 
  theme(
    legend.position = "none", 
    text = element_text(family = "Arial", color = "black"), 
    plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),  # Título maior e centralizado
    axis.title = element_text(face = "bold"),  # Eixo com títulos em negrito
    axis.text = element_text(size = 12),  # Ajuste do tamanho das fontes dos eixos
    axis.title.x = element_text(margin = margin(t = 10)),  # Margem no título do eixo X
    axis.title.y = element_text(margin = margin(r = 10))   # Margem no título do eixo Y
  )

# Exibir o gráfico
print(grafserie)  # Gráfico com os dados do Brasil
```
